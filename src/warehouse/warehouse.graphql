type Query {
  getWh(input: WarehouseRequest!): WarehouseResponse!
  getAllWh: AllWarehouseResponse!
  getAllProductWh(input: AllProductWHRequest!): AllProductWHResponse!
}

type Mutation {
  addWh(input: CreateWarehouseRequest!): WarehouseResponse!
  addProductToWh(input: ProductWHRequest!): ProductWHResponse!
  deleteProductWh(input: DeleteProductWHRequest!): ProductWHResponse!
  updateWh(input: UpdateWarehouseRequest!): WarehouseResponse!
  updateStock(input: ProductWHRequest!): ProductWHResponse!
}

type Warehouse {
  id: Int!
  name: String!
  location: String!
}

type ProductWH {
  idProduct: String!
  stock: Int!
}

type AllWarehouseResponse {
  warehouses: [Warehouse]
  error: Error
}

type WarehouseResponse {
  warehouse: Warehouse
  error: Error
}

type ProductWHResponse {
  success: Boolean!
  error: Error
}

type AllProductWHResponse {
  products: [ProductWH]
  error: Error
}

type Error {
  message: String!
}

input CreateWarehouseRequest {
  name: String!
  location: String!
}

input WarehouseRequest {
  id: Int!
}

input ProductWHRequest {
  idProduct: String!
  idWH: Int!
  stock: Int!
}

input DeleteProductWHRequest {
  idProduct: String!
  idWH: Int!
}

input UpdateWarehouseRequest {
  id: Int!
  name: String!
  location: String!
}

input AllProductWHRequest {
  idWH: Int!
}